# This workflow build Docker container and push to Google Artifact Registry and deploy it on Cloud Run when code changes are pushed to the "dev" branch
#
# Steps:
#
# 1. Checkout
# 2. Docker Auth for Artifact Regisrty
# 3. Google auth for Artifact Registry admin access
# 4. Build docker container and push to Google Artifact Registry

name: buildDev

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request event for the "dev" branch
  pull_request:
    branches: [ "dev" ]

env:
  PROJECT_ID: flexion-dev # GCP Proj id
  GAR_LOCATION: us-central1 # Artifact Registry location
  SERVICE: hello-srv # Registry artifact name
  REGION: us-central1 # update Cloud Run service region
  REPO_NAME: flexion-repository #Artifactory registry repo name

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v2
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: _json_key
          password: ${{ secrets.GCP_REGISTRY_DEV_ACCESS_TOKEN }}

      - name: Google Registry Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_REGISTRY_DEV_ACCESS_TOKEN }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE }}:dev" ./
          docker images
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE }}:dev"


       